{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","actions.js","constants.js","serviceWorker.js","reducers.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","src","concat","alt","CardList","animals","map","user","i","Components_Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","borderTop","borderBottom","height","children","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","error","info","setState","Component","App","onRequestCats","_this$props","searchField","onSearchChange","isPending","filteredAnimals","filter","animal","toLowerCase","includes","Components_SearchBox","Components_Scroll","Components_ErrorBoundary","Components_CardList","connect","searchCats","requestCats","dispatch","event","payload","target","value","fetch","then","response","json","data","catch","Boolean","window","location","hostname","match","initialStateSearch","initialStateCats","logger","createLogger","rootReducer","combineReducers","arguments","length","undefined","action","assign","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","es","src_Containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bb0a4bc4.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ name, email, id}) => {\n    return (\n        <div className='tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'>\n            <img src={`https://robohash.org/set_set4/${name}?size=200x200`} alt='Animal'/>\n            \n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n\n    );\n}\n\nexport default Card","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ( { animals }) => {\n       return (\n        <div>\n            {\n               animals.map((user, i) => {\n                    return (\n                        <Card\n                        key={i}\n                        id ={animals[i].id}\n                        name={animals[i].name}\n                        email = {animals[i].email}\n                        />\n                    );\n                 })\n            }                 \n        </div>\n    );\n\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input\n            className='pa3 ba b--green bg-lightest-blue'\n             type='search'\n             placeholder='search cats' \n            onChange={searchChange}\n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style = {{overflowY: 'scroll', borderTop: '3px solid black', borderBottom: '3px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({hasError: true})\n    }\n\n    render() {\n        if (this.state.hasError) {\n           return <h1>Oops something went wrong</h1> \n        }\n        return this.props.children\n    }\n}\n\n\nexport default ErrorBoundary;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox'\nimport Scroll from '../Components/Scroll'\nimport ErrorBoundary from '../Components/ErrorBoundary'\nimport './App.css';\nimport { setSearchField, requestCats } from '../actions.js';\n\nconst mapStateToProps = state => {\n    return {\n        searchField: state.searchCats.searchField,\n        animals: state.requestCats.animals,\n        isPending: state.requestCats.isPending,\n        error: state.requestCats.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSearchChange: (event) => dispatch(setSearchField(event.target.value)),\n        onRequestCats: () => dispatch(requestCats())\n    }\n}\n\n\nclass App extends Component {\n      \n    componentDidMount() {\n      this.props.onRequestCats();\n    }\n   \n    render() {\n        const { searchField, onSearchChange, animals, isPending } = this.props;\n        const filteredAnimals = animals.filter(animal => {\n            return animal.name.toLowerCase().includes(searchField.toLowerCase());\n        })\n        return  isPending ? \n            <h1>Loading</h1> :\n            <div className ='tc'>\n                <h1 className='f1'>Cat Friends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList animals={filteredAnimals}/>\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n            ;\n        }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { \n    CHANGE_SEARCH_FIELD,\n    REQUEST_CATS_PENDING,\n    REQUEST_CATS_SUCCESS,\n    REQUEST_CATS_FAILED\n} from './constants.js';\n\nexport const setSearchField = (text) => ({\n    type: CHANGE_SEARCH_FIELD,\n    payload: text\n})\n\nexport const requestCats = () => (dispatch) => {\n    dispatch ({type: REQUEST_CATS_PENDING});\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(data => dispatch({type: REQUEST_CATS_SUCCESS, payload: data}))\n    .catch(error => dispatch({type: REQUEST_CATS_FAILED, payload: error}))\n}\n","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n\nexport const REQUEST_CATS_PENDING = 'REQUEST_CATS_PENDING';\nexport const REQUEST_CATS_SUCCESS = 'REQUEST_CATS_SUCCESS';\nexport const REQUEST_CATS_FAILED = 'REQUEST_CATS_FAILED';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { \n    CHANGE_SEARCH_FIELD,\n    REQUEST_CATS_PENDING,\n    REQUEST_CATS_SUCCESS,\n    REQUEST_CATS_FAILED\n} from './constants.js';\n\nconst initialStateSearch = {\n    searchField: ''\n}\n\nexport const searchCats = (state = initialStateSearch, action = {}) => {\n    switch(action.type) {\n        case CHANGE_SEARCH_FIELD:\n            return Object.assign({}, state, {searchField: action.payload});\n        default:\n            return state;\n    }\n}\n\nconst initialStateCats = {\n    isPending: false,\n    animals: [],\n    error: ''\n}\nexport const requestCats = (state = initialStateCats, action = {}) => {\n    switch(action.type) {\n        case REQUEST_CATS_PENDING:\n            return Object.assign({}, state, { isPending: true})\n        case REQUEST_CATS_SUCCESS:\n            return Object.assign({}, state, { animals: action.payload, isPending: false })\n        case REQUEST_CATS_FAILED:\n            return Object.assign({}, state, { error: action.payload, isPending: false})\n        default:\n            return state;\n\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider} from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger} from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './Containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport { searchCats, requestCats } from './reducers.js'; \nimport 'tachyons';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ searchCats, requestCats})\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger))\n\nReactDOM.render(\n    <Provider store = {store} >\n      <App />\n    </Provider>  \n      , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}